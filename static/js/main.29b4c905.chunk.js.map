{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goodsIsVisible","showGoods","visibleGoods","setVisibleGoods","minLength","changeMinLength","getSortedGoods","method","sort","a","b","localeCompare","length","className","map","good","type","onClick","reverse","name","id","value","onChange","e","target","filter","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqIaC,EAlIO,WACpB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAASF,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAqCJ,mBAAS,GAA9C,mBAAOK,EAAP,KAAkBC,EAAlB,KAaMC,EAAiB,SAACC,GAEpBJ,EADa,QAAXI,EACc,YAAIL,GAAcM,MAAK,SAACC,EAAGC,GAAJ,OACrCD,EAAEE,cAAcD,MAGF,YAAIR,GAAcM,MAAK,SAACC,EAAGC,GAAJ,OACrCD,EAAEG,OAASF,EAAEE,YAUnB,OACE,sBACEC,UAAU,oBADZ,UAGE,oBACEA,UAAU,0BADZ,mBAKEb,EAWE,qCACE,6BACGE,EAAaY,KAAI,SAAAC,GAChB,OACE,oBAEEF,UAAU,oBAFZ,SAIGE,GAHIA,QASb,sBAAKF,UAAU,UAAf,UACE,wBACEA,UAAU,SACVG,KAAK,SACLC,QAAS,WAjErBd,EAAgB,YAAID,GAAcgB,YA8DxB,qBAQA,wBACEL,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAMX,EAAe,QAHhC,iCAQA,wBACEO,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAMX,EAAe,WAHhC,4BAQA,yBACEO,UAAU,SACVM,KAAK,GACLC,GAAG,GACHC,MAAOjB,EACPkB,SAAU,SAACC,GAxFD,IAACX,KAyFQW,EAAEC,OAAOH,MAxFxChB,EAAgBO,GAChBT,EAAgBN,EAAgB4B,QAAO,SAAAV,GAAI,OACzCA,EAAKH,QAAUA,OAgFP,UASE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIHnB,IAAiBL,GAChB,wBACEgB,UAAU,4CACVG,KAAK,SACLC,QAAS,kBAzFrBd,EAAgBN,QAChBQ,EAAgB,IAqFN,sBAvEJ,wBACEQ,UAAU,gCACVG,KAAK,SACLC,QAAS,kBAAMhB,GAAU,IAH3B,uBCzDVyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29b4c905.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goodsIsVisible, showGoods] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [minLength, changeMinLength] = useState(1);\n\n  const getReversedGoods = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n  };\n\n  const getFiteredGoods = (length: number) => {\n    changeMinLength(length);\n    setVisibleGoods(goodsFromServer.filter(good => (\n      good.length >= length\n    )));\n  };\n\n  const getSortedGoods = (method: string) => {\n    if (method === 'abc') {\n      setVisibleGoods([...visibleGoods].sort((a, b) => (\n        a.localeCompare(b)\n      )));\n    } else {\n      setVisibleGoods([...visibleGoods].sort((a, b) => (\n        a.length - b.length\n      )));\n    }\n  };\n\n  const resetGoods = () => {\n    setVisibleGoods(goodsFromServer);\n    changeMinLength(1);\n  };\n\n  return (\n    <div\n      className=\"App box container\"\n    >\n      <h1\n        className=\"title has-text-centered\"\n      >\n        Goods\n      </h1>\n      {!goodsIsVisible\n        ? (\n          <button\n            className=\"button is-success is-outlined\"\n            type=\"button\"\n            onClick={() => showGoods(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <ul>\n              {visibleGoods.map(good => {\n                return (\n                  <li\n                    key={good}\n                    className=\"has-text-centered\"\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n            </ul>\n\n            <div className=\"is-flex\">\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => getReversedGoods()}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => getSortedGoods('abc')}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => getSortedGoods('length')}\n              >\n                Sort by length\n              </button>\n\n              <select\n                className=\"button\"\n                name=\"\"\n                id=\"\"\n                value={minLength}\n                onChange={(e) => {\n                  getFiteredGoods(+e.target.value);\n                }}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n\n            {visibleGoods !== goodsFromServer && (\n              <button\n                className=\"button is-danger is-outlined is-fullwidth\"\n                type=\"button\"\n                onClick={() => resetGoods()}\n              >\n                Reset\n              </button>\n            )}\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}