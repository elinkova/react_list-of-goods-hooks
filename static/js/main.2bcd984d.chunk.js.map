{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goodsIsVisible","showGoods","visibleGoods","setVisibleGoods","minLength","changeMinLength","className","type","onClick","map","good","reverse","sort","a","b","localeCompare","length","name","id","value","onChange","e","filter","target","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiHaC,EA9GO,WACpB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAASF,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAqCJ,mBAAS,GAA9C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBACEC,UAAU,oBADZ,UAGE,oBACEA,UAAU,0BADZ,oBAKEN,GACA,wBACEM,UAAU,gCACVC,KAAK,SACLC,QAAS,kBAAMP,GAAU,IAH3B,mBAQDD,GACC,qCACE,6BACGE,EAAaO,KAAI,SAAAC,GAChB,OACE,oBAEEJ,UAAU,oBAFZ,SAIGI,GAHIA,QASb,sBAAKJ,UAAU,UAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAML,EAAgB,YAAID,GAAcS,YAHnD,qBAQA,wBACEL,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAML,EAAgB,YAAID,GAAcU,MAAK,SAACC,EAAGC,GAAJ,OACpDD,EAAEE,cAAcD,QAJpB,iCAUA,wBACER,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAML,EAAgB,YAAID,GAAcU,MAAK,SAACC,EAAGC,GAAJ,OACpDD,EAAEG,OAASF,EAAEE,YAJjB,4BAUA,yBACEV,UAAU,SACVW,KAAK,GACLC,GAAG,GACHC,MAAOf,EACPgB,SAAU,SAACC,GACTlB,EAAgBN,EAAgByB,QAAO,SAAAZ,GAAI,OACzCA,EAAKM,SAAWK,EAAEE,OAAOJ,UAE3Bd,GAAiBgB,EAAEE,OAAOJ,QAT9B,UAYE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIHjB,IAAiBL,GAChB,wBACES,UAAU,4CACVC,KAAK,SACLC,QAAS,WACPL,EAAgBN,GAChBQ,EAAgB,IALpB,0BC1GZmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2bcd984d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goodsIsVisible, showGoods] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [minLength, changeMinLength] = useState(1);\n\n  return (\n    <div\n      className=\"App box container\"\n    >\n      <h1\n        className=\"title has-text-centered\"\n      >\n        Goods\n      </h1>\n      {!goodsIsVisible && (\n        <button\n          className=\"button is-success is-outlined\"\n          type=\"button\"\n          onClick={() => showGoods(true)}\n        >\n          Start\n        </button>\n      )}\n      {goodsIsVisible && (\n        <>\n          <ul>\n            {visibleGoods.map(good => {\n              return (\n                <li\n                  key={good}\n                  className=\"has-text-centered\"\n                >\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n\n          <div className=\"is-flex\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setVisibleGoods([...visibleGoods].reverse())}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setVisibleGoods([...visibleGoods].sort((a, b) => (\n                a.localeCompare(b)\n              )))}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setVisibleGoods([...visibleGoods].sort((a, b) => (\n                a.length - b.length\n              )))}\n            >\n              Sort by length\n            </button>\n\n            <select\n              className=\"button\"\n              name=\"\"\n              id=\"\"\n              value={minLength}\n              onChange={(e) => {\n                setVisibleGoods(goodsFromServer.filter(good => (\n                  good.length >= +e.target.value\n                )));\n                changeMinLength(+e.target.value);\n              }}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </div>\n\n          {visibleGoods !== goodsFromServer && (\n            <button\n              className=\"button is-danger is-outlined is-fullwidth\"\n              type=\"button\"\n              onClick={() => {\n                setVisibleGoods(goodsFromServer);\n                changeMinLength(1);\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}